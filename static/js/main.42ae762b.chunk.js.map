{"version":3,"sources":["components/CatQuote/CatQuote.js","redux/actions/quotes.js","redux/reducers/reducers.js","redux/reducers/quotes.js","redux/store.js","App.js","index.js"],"names":["CatQuote","dispatch","useDispatch","useSelector","state","quote","item","isLoading","useState","currentImage","setCurrentImage","useEffect","config","headers","axios","defaults","get","type","then","response","payload","data","fetchQuoteSuccess","catch","error","fetchQuoteError","fetchQuote","getRandomImage","setInterval","imgNumber","Math","floor","random","className","src","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAMaA,EAAW,WACpB,IAAMC,EAAWC,cADS,EAGEC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAApCC,GAHO,EAGlBC,UAHkB,EAGPD,MAHO,EAIcE,mBAAS,aAJvB,mBAInBC,EAJmB,KAILC,EAJK,KAM1BC,qBAAU,WACNV,ECUD,WACH,IAAMW,EAAS,CACXC,QAAS,CACL,8BAA+B,IAC/B,+BAAgC,aAMxC,OAFAC,IAAMC,SAASF,QAAQG,IAAI,+BAAiC,IAErD,SAAAf,GACHA,EA5B0B,CAC9BgB,KAL+B,yBAiC3BH,IAAME,IAAN,kFAA6FJ,GACxFM,MAAK,SAAAC,GAAQ,OAAIlB,EA1BJ,SAACkB,GAAD,MAAe,CACrCF,KAR+B,uBAS/BG,QAASD,EAASE,MAwBiBC,CAAkBH,OAC5CI,OAAM,SAAAC,GAAK,OAAIvB,EArBJ,SAAAuB,GAAK,MAAK,CAC9BP,KAb6B,qBAc7BG,QAASI,EAAML,UAmBkBM,CAAgBD,QDxBpCE,IACTC,MACD,CAAC1B,IAEJ,IAAM0B,EAAiB,WAElBC,aAAY,WACT,IAAIC,EAAYC,KAAKC,MAAuB,IAAhBD,KAAKE,SAAkB,GACnDtB,EAAgB,OAAD,OAAQmB,EAAR,WAHO,QAQ9B,OACI,yBAAKI,UAAU,aACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,iBAAiBC,IAAKzB,IACrC,uBAAGwB,UAAU,mBAAmB3B,M,sBExBhD,IAIe6B,EAJKC,YAAgB,CAChC/B,MCEW,WAIH,IAJyBD,EAI1B,uDAJkC,CACzCG,WAAW,EACXD,KAAM,GACNkB,MAAO,MACRa,EAAQ,uCACP,OAAOA,EAAOpB,MACV,IFb2B,uBEcvB,OAAO,2BACAb,GADP,IAEIoB,MAAO,KACPjB,WAAW,IAEnB,IFlB2B,uBEmBvB,OAAO,2BACAH,GADP,IAEIG,WAAW,EACXD,KAAM+B,EAAOjB,UAErB,IFvByB,qBEwBrB,MAAO,CACHb,WAAW,EACXD,KAAM,GACNkB,MAAOa,EAAOjB,SAEtB,QAAS,OAAOhB,MC7BlBkC,EAAmBC,OAAOC,sCAAwCC,IASzDC,EAPDC,YACVR,EACAG,EACIM,YAAgBC,O,MCWTC,MAVf,WACE,OACI,kBAAC,IAAD,CAAUJ,MAAOA,GACf,yBAAKT,UAAU,QACX,kBAAC,EAAD,SCVZc,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.42ae762b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchQuote } from \"../../redux/actions/quotes\";\n\nimport './CatQuote.scss';\n\nexport const CatQuote = () => {\n    const dispatch = useDispatch();\n\n    const { isLoading, item } = useSelector(state => state.quote);\n    const [currentImage, setCurrentImage] = useState('img/1.jpg');\n\n    useEffect(() => {\n        dispatch(fetchQuote());\n        getRandomImage();\n    }, [dispatch]);\n\n    const getRandomImage = () => {\n        const dayInMilliseconds = 1000 * 60 * 60 * 24;\n         setInterval(() => {\n            let imgNumber = Math.floor((Math.random() * 104) + 1);\n            setCurrentImage(`img/${imgNumber}.jpg`);\n        }, dayInMilliseconds);\n    }\n\n\n    return (\n        <div className='cat-quote'>\n            <div className='cat-quote__wrapper'>\n                <img className='cat-quote__img' src={currentImage}/>\n                <p className='cat-quote__text'>{item}</p>\n            </div>\n\n        </div>\n    );\n};\n","import axios from 'axios';\n\nexport const FETCH_QUOTE_REQUEST = 'FETCH_QUOTES_REQUEST';\nexport const FETCH_QUOTE_SUCCESS = 'FETCH_QUOTES_SUCCESS';\nexport const FETCH_QUOTE_ERROR = 'FETCH_QUOTES_ERROR';\n\nconst fetchQuoteRequests = () => ({\n    type: FETCH_QUOTE_REQUEST\n});\n\nconst fetchQuoteSuccess = (response) => ({\n    type: FETCH_QUOTE_SUCCESS,\n    payload: response.data\n});\n\n\nconst fetchQuoteError = error => ({\n    type: FETCH_QUOTE_ERROR,\n    payload: error.response\n});\n\n\n\nexport function fetchQuote() {\n    const config = {\n        headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"GET,POST\"\n        }\n    };\n\n    axios.defaults.headers.get['Access-Control-Allow-Origin'] = '*';\n\n    return dispatch => {\n        dispatch(fetchQuoteRequests());\n        axios.get(`https://api.forismatic.com/api/1.0/?method=getQuote&format=json&json=parseQuote`, config)\n            .then(response => dispatch(fetchQuoteSuccess(response)))\n            .catch(error => dispatch(fetchQuoteError(error)))\n    }\n}\n","import { combineReducers } from 'redux';\nimport quoteReducer from \"./quotes\";\n\n\n\n\nconst rootReducer = combineReducers({\n    quote: quoteReducer,\n});\n\nexport default rootReducer;\n","import {\n    FETCH_QUOTE_ERROR,\n    FETCH_QUOTE_REQUEST,\n    FETCH_QUOTE_SUCCESS,\n\n\n} from \"../actions/quotes\";\n\n\nexport default function quoteReducer(state = {\n    isLoading: false,\n    item: '',\n    error: null\n}, action) {\n    switch(action.type) {\n        case FETCH_QUOTE_REQUEST:\n            return {\n                ...state,\n                error: null,\n                isLoading: true\n            };\n        case FETCH_QUOTE_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                item: action.payload\n            };\n        case FETCH_QUOTE_ERROR:\n            return {\n                isLoading: false,\n                item: '',\n                error: action.payload\n            };\n        default: return state;\n    }\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);\n\nexport default store;\n","import React from 'react';\nimport { Provider } from \"react-redux\";\n\nimport { CatQuote } from './components/CatQuote/CatQuote';\n\nimport store from './redux/store';\n\nimport './App.scss';\n\n\nfunction App() {\n  return (\n      <Provider store={store}>\n        <div className='main'>\n            <CatQuote />\n        </div>\n      </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}